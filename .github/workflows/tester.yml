name: DevOpsInABox

on:
  workflow_dispatch:
    inputs:
      increment_devops_version:
        type: choice
        description: Version increment for devopsinabox
        required: true
        default: 'patch'
        options:
        - major
        - minor
        - patch
      increment_catalog_version:
        type: choice
        description: Version increment for catalog
        required: true
        default: 'patch'
        options:
        - major
        - minor
        - patch
      cloud_provider:
        type: choice
        description: Used for branch and channel targeting
        required: true
        default: 'aws'
        options:
        - aws
        - azure

jobs:
  build_devopsinabox:

    name: Build and Deploy DevOpsInABox
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:

      - uses: actions/checkout@v3
        with:
          path: scripts

      - uses: actions/checkout@v3
        with:
          repository: prft-rh/devopsinabox-operator
          ref: ${{ inputs.cloud_provider }}
          path: devopsinabox-operator

      - uses: actions/checkout@v3
        with:
          repository: prft-rh/devopsinabox-helm-chart
          ref: ${{ inputs.cloud_provider }}
          path: devopsinabox-helm-chart

      - uses: actions/checkout@v3
        with:
          repository: prft-rh/devopsinabox-namespace-helm-chart
          ref: ${{ inputs.cloud_provider }}
          path: devopsinabox-namespace-helm-chart

      - uses: actions/checkout@v3
        with:
          repository: prft-rh/spring-boot-app-helm-chart
          ref: ${{ inputs.cloud_provider }}
          path: spring-boot-app-helm-chart

      - name: Check values
        run: |
          echo "testing!"
          ls
          echo "testing 2!"
          cd scripts
          ls
        shell: bash

      - name: Set versions
        id: set_versions
        run: |
          TAG_DATA=$(curl --location --request GET 'https://quay.io/api/v1/repository/shawn_stout_org/devopsinabox-operator/tag?limit=100' --header 'Authorization: Bearer $TOKEN')
          TAG_VERSION=$(echo $TAG_DATA | jq .tags | jq '.[0].name' -r)
          if [ "$TAG_VERSION" = "null" ]
          then
                echo "tag is null"
                TAG_VERSION="v0.0.0-$CHANNEL"
          fi
          echo $TAG_VERSION
          echo "OLD_VERSION=$(echo $TAG_VERSION)" >> $GITHUB_ENV
          TAG_DATA=$(curl --location --request GET 'https://quay.io/api/v1/repository/shawn_stout_org/operators-catalog/tag?limit=1' --header 'Authorization: Bearer $TOKEN')
          TAG_VERSION=$(echo $TAG_DATA | jq .tags | jq '.[0].name' -r)
          if [ "$TAG_VERSION" = "null" ]
          then
                echo "tag is null"
                TAG_VERSION="v0.0.0"
          fi
          echo $TAG_VERSION
          echo "OLD_CATALOG_VERSION=$(echo $TAG_VERSION)" >> $GITHUB_ENV
          echo "now testing"
          echo $OLD_VERSION
          echo ${{ env.OLD_VERSION }}
          echo $OLD_CATALOG_VERSION
          echo ${{ env.OLD_CATALOG_VERSION }}
        shell: bash
        env:
          TOKEN: ${{ secrets.QUAY_API_TOKEN }}
          CHANNEL: ${{ inputs.cloud_provider }}

      - name: Check values two
        run: |
          ls
          echo "testing!"
          echo $OLD_VERSION
          echo ${{ env.OLD_VERSION }}
          echo "testing 2!"
          echo $OLD_CATALOG_VERSION
          echo ${{ env.OLD_CATALOG_VERSION }}
          echo "testing 3!"
        shell: bash

      - name: Install Operator SDK
        run: |
          export ARCH=$(case $(uname -m) in x86_64) echo -n amd64 ;; aarch64) echo -n arm64 ;; *) echo -n $(uname -m) ;; esac)
          export OS=$(uname | awk '{print tolower($0)}')

          export OPERATOR_SDK_DL_URL=https://github.com/operator-framework/operator-sdk/releases/download/v1.15.0
          curl -LO ${OPERATOR_SDK_DL_URL}/operator-sdk_${OS}_${ARCH}

          gpg --keyserver keyserver.ubuntu.com --recv-keys 052996E2A20B5C7E

          curl -LO ${OPERATOR_SDK_DL_URL}/checksums.txt
          curl -LO ${OPERATOR_SDK_DL_URL}/checksums.txt.asc
          gpg -u "Operator SDK (release) <cncf-operator-sdk@cncf.io>" --verify checksums.txt.asc

          grep operator-sdk_${OS}_${ARCH} checksums.txt | sha256sum -c -

          chmod +x operator-sdk_${OS}_${ARCH} && sudo mv operator-sdk_${OS}_${ARCH} /usr/local/bin/operator-sdk

          rm checksums.txt
          rm checksums.txt.asc
        shell: bash

      - name: Install Openshift CLI Tools
        run: |
          echo $PATH
          curl https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz > openshift-client-linux.tar.gz
          curl https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/latest/opm-linux.tar.gz > opm-linux.tar.gz
          mkdir openshift
          tar -zxvf openshift-client-linux.tar.gz -C openshift
          tar -zxvf opm-linux.tar.gz -C openshift
          echo 'export PATH=$PATH:~/openshift' >> ~/.bashrc && source ~/.bashrc
          sudo mv ./openshift/opm /usr/local/bin/
          rm openshift-client-linux.tar.gz
          rm opm-linux.tar.gz
        shell: bash

      - name: Check versions
        run: |
          yq --version
          docker --version
          operator-sdk version
          git --version
          opm version
          helm version
        shell: bash